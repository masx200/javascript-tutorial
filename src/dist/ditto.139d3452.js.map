{"version":3,"sources":["ditto.js"],"names":["$","ditto","content_id","sidebar_id","edit_id","back_to_top_id","loading_id","error_id","search_name","search_results_class","fragments_class","fragment_class","highlight_code","sidebar","edit_button","back_to_top_button","searchbar","github_username","github_repo","run","initialize","get","sidebar_file","data","init_searchbar","search","html","marked","selector","replace","keydown","searchbar_listener","addClass","fail","alert","show","on","animate","scrollTop","base_url","hash","location","index","window","open","hljs","initHighlightingOnLoad","router","build_text_matches_html","fragments","i","length","fragment","text","display_search_results","results_html","items","hide_errors","build_result_matches_html","matches","url","path","origin","text_matches","show_error","click","destination","event","which","q","val","replace_symbols","li_create_linkage","li_tag","header_level","html_safe_tag","attr","header","offset","top","original_color","css","color","create_youtube_embeds","token_regex","yt_embed_url","youtube_url_to_embed","youtube_url_extract","yt_regex","yt_url","String","match","embed_html","normalize_paths","find","map","src","slice","base_dir","split","join","err_msg","hide","stop_loading","clearInterval","loading_interval","page_getter","scrollTo","pathname","pop","setInterval","fadeIn","fadeOut","compile_into_dom","cb","unescape_html","string","ignore_list","host","inArray","create_page_anchors","headers","push","j","each","block","highlightBlock","escape_html","MathJax","Extension","startNumber","labels","content","document","getElementById","Hub","Queue","console","error","setTimeout","github_search","query","github_api","ajax","Accept","done"],"mappings":"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","file":"ditto.139d3452.js","sourceRoot":"..","sourcesContent":["$(function ($) {\r\n\r\n    var ditto = {\r\n        content_id: $(\"#content\"),\r\n        sidebar_id: $(\"#sidebar\"),\r\n\r\n        edit_id: $(\"#edit\"),\r\n        back_to_top_id: $(\"#back_to_top\"),\r\n\r\n        loading_id: $(\"#loading\"),\r\n        error_id: $(\"#error\"),\r\n\r\n        search_name: $(\"#search\"),\r\n        search_results_class: \".search_results\",\r\n        fragments_class: \".fragments\",\r\n        fragment_class: \".fragment\",\r\n\r\n        highlight_code: true,\r\n\r\n        // display elements\r\n        sidebar: true,\r\n        edit_button: true,\r\n        back_to_top_button: true,\r\n        searchbar: true,\r\n\r\n        // github specifics\r\n        github_username: null,\r\n        github_repo: null,\r\n\r\n        // initialize function\r\n        run: initialize\r\n    };\r\n\r\n    function initialize() {\r\n        // initialize sidebar and buttons\r\n        if (ditto.sidebar) {\r\n            init_sidebar_section();\r\n        }\r\n\r\n        if (ditto.back_to_top_button) {\r\n            init_back_to_top_button();\r\n        }\r\n\r\n        if (ditto.edit_button) {\r\n            init_edit_button();\r\n        }\r\n\r\n        // intialize highligh.js\r\n        if (ditto.highlight_code) {\r\n            hljs.initHighlightingOnLoad();\r\n        }\r\n\r\n        // page router\r\n        router();\r\n        $(window).on('hashchange', router);\r\n    }\r\n\r\n    function init_sidebar_section() {\r\n        $.get(ditto.sidebar_file, function (data) {\r\n            ditto.sidebar_id.html(marked(data));\r\n\r\n            if (ditto.searchbar) {\r\n                init_searchbar();\r\n            }\r\n\r\n//由于当作bootstrap导航栏,所以给sidebar中的ul增加class为\"navbar-nav\"\r\n            // $(\"#sidebar > ul\").addClass(\"navbar-nav\")\r\n            // $(\"#sidebar > h1\").addClass(\"nav-item\")\r\n            // $(\"#sidebar > p\").addClass(\"nav-item\")\r\n            // $(\"#sidebar > p>a\").addClass(\"nav-link\")\r\n            // $(\"#sidebar > h2\").addClass(\"nav-item\")\r\n            // $(\"#sidebar > li\").addClass(\"nav-item\")\r\n            // $(\"#sidebar > a\").addClass(\"nav-link\")\r\n            // $(\"#sidebar >ul> li\").addClass(\"nav-item\")\r\n            // // nav-item navbar-nav nav-link\r\n            // $(\"#sidebar > ol\").addClass(\"navbar-nav\")\r\n            // $(\"#sidebar >ol> li\").addClass(\"nav-item\")\r\n            // $(\"#sidebar >ol>li> a\").addClass(\"nav-link\")\r\n            // $(\"#sidebar >ul>li> a\").addClass(\"nav-link\")\r\n            // $(\"#sidebar >h1> a\").addClass(\"nav-link\")\r\n            // $(\"#sidebar >ul>li> input\").addClass(\"nav-link\")\r\n            $(\"#sidebar  ul\").addClass(\"navbar-nav\")\r\n$(\"#sidebar  h1\").addClass(\"nav-item\")\r\n$(\"#sidebar  p\").addClass(\"nav-item\")\r\n$(\"#sidebar a\").addClass(\"nav-link\")\r\n$(\"#sidebar  h2\").addClass(\"nav-item\")\r\n$(\"#sidebar  li\").addClass(\"nav-item\")\r\n// $(\"#sidebar > a\").addClass(\"nav-link\")\r\n// $(\"#sidebar >ul> li\").addClass(\"nav-item\")\r\n// nav-item navbar-nav nav-link\r\n$(\"#sidebar  ol\").addClass(\"navbar-nav\")\r\n$(\"#sidebar  li\").addClass(\"nav-item\")\r\n// $(\"#sidebar >ol>li> a\").addClass(\"nav-link\")\r\n// $(\"#sidebar >ul>li> a\").addClass(\"nav-link\")\r\n// $(\"#sidebar >h1> a\").addClass(\"nav-link\")\r\n$(\"#sidebar  input\").addClass(\"nav-link\")\r\n        }, \"text\").fail(function () {\r\n            alert(\"Opps! can't find the sidebar file to display!\");\r\n        });\r\n\r\n    }\r\n\r\n    function init_back_to_top_button() {\r\n        ditto.back_to_top_id.show();\r\n        ditto.back_to_top_id.on(\"click\", function () {\r\n            $(\"body, html\").animate({\r\n                scrollTop: 0\r\n            }, 200);\r\n        });\r\n    }\r\n\r\n    function init_edit_button() {\r\n        if (ditto.base_url === null) {\r\n            alert(\"Error! You didn't set 'base_url' when calling ditto.run()!\");\r\n\r\n        } else {\r\n            ditto.edit_id.show();\r\n            ditto.edit_id.on(\"click\", function () {\r\n                var hash = location.hash.replace(\"#\", \"/\");\r\n\r\n                if (hash === \"\") {\r\n                    hash = \"/\" + ditto.index.replace(\".md\", \"\");\r\n                }\r\n\r\n                window.open(ditto.base_url + hash + \".md\");\r\n                // open is better than redirecting, as the previous page history\r\n                // with redirect is a bit messed up\r\n            });\r\n        }\r\n    }\r\n\r\n    function init_searchbar() {\r\n        var sidebar = ditto.sidebar_id.html();\r\n        var match = \"[ditto:searchbar]\";\r\n\r\n        // html input searchbar\r\n        var search = \"<input name='\" + ditto.search_name.selector + \"'\";\r\n        search = search + \" type='search'\";\r\n        search = search + \" results='10'>\";\r\n\r\n        // replace match code with a real html input search bar\r\n        sidebar = sidebar.replace(match, search);\r\n        ditto.sidebar_id.html(sidebar);\r\n\r\n        // add search listener\r\n        $(\"input[name=\" + ditto.search_name.selector + \"]\").keydown(searchbar_listener);\r\n    }\r\n\r\n    function build_text_matches_html(fragments) {\r\n        var html = \"\";\r\n        var class_name = ditto.fragments_class.replace(\".\", \"\");\r\n\r\n        html += \"<ul class='\" + class_name + \"'>\";\r\n        for (var i = 0; i < fragments.length; i++) {\r\n            var fragment = fragments[i].fragment.replace(\"/[\\uE000-\\uF8FF]/g\", \"\");\r\n            html += \"<li class='\" + ditto.fragment_class.replace(\".\", \"\") + \"'>\";\r\n            html += \"<pre><code> \";\r\n            fragment = $(\"#hide\").text(fragment).html();\r\n            html += fragment;\r\n            html += \" </code></pre></li>\";\r\n        }\r\n        html += \"</ul>\";\r\n\r\n        return html;\r\n    }\r\n\r\n    function build_result_matches_html(matches) {\r\n        var html = \"\";\r\n        var class_name = ditto.search_results_class.replace(\".\", \"\");\r\n\r\n        html += \"<ul class='\" + class_name + \"'>\";\r\n        for (var i = 0; i < matches.length; i++) {\r\n            var url = matches[i].path;\r\n\r\n            if (url !== ditto.sidebar_file) {\r\n                var hash = \"#\" + url.replace(\".md\", \"\");\r\n                var path = window.location.origin + \"/\" + hash;\r\n\r\n                // html += \"<li>\";\r\n                html += \"<li class='link'>\";\r\n                html += url;\r\n                // html += \"<a href='\" + path +\"'>\" + url + \"</a>\";\r\n                html += \"</li>\";\r\n\r\n                var match = build_text_matches_html(matches[i].text_matches);\r\n                html += match;\r\n            }\r\n\r\n        }\r\n        html += \"</ul>\";\r\n\r\n        return html;\r\n    }\r\n\r\n    function display_search_results(data) {\r\n        var results_html = \"<h1>Search Results</h1>\";\r\n\r\n        if (data.items.length) {\r\n            hide_errors();\r\n            results_html += build_result_matches_html(data.items);\r\n        } else {\r\n            show_error(\"Opps.. Found no matches!\");\r\n        }\r\n\r\n        ditto.content_id.html(results_html);\r\n        $(ditto.search_results_class + \" .link\").click(function () {\r\n            var destination = \"#\" + $(this).html().replace(\".md\", \"\");\r\n            location.hash = destination;\r\n        });\r\n    }\r\n\r\n    function github_search(query) {\r\n        if (ditto.github_username && ditto.github_repo) {\r\n            // build github search api url string\r\n            var github_api = \"https://api.github.com/\";\r\n            var search = \"search/code?q=\";\r\n            var github_repo = ditto.github_username + \"/\" + ditto.github_repo;\r\n            var search_details = \"+in:file+language:markdown+repo:\";\r\n\r\n            var url = github_api + search + query + search_details + github_repo;\r\n            var accept_header = \"application/vnd.github.v3.text-match+json\";\r\n\r\n            $.ajax(url, { headers: { Accept: accept_header } }).done(function (data) {\r\n                display_search_results(data);\r\n            });\r\n        }\r\n\r\n        if (ditto.github_username == null && ditto.github_repo == null) {\r\n            alert(\"You have not set ditto.github_username and ditto.github_repo!\");\r\n        } else if (ditto.github_username == null) {\r\n            alert(\"You have not set ditto.github_username!\");\r\n        } else if (ditto.github_repo == null) {\r\n            alert(\"You have not set ditto.github_repo!\");\r\n        }\r\n    }\r\n\r\n    function searchbar_listener(event) {\r\n        if (event.which === 13) {  // when user presses ENTER in search bar\r\n            var q = $(\"input[name=\" + ditto.search_name.selector + \"]\").val();\r\n            if (q !== \"\") {\r\n                location.hash = \"#search=\" + q;\r\n            } else {\r\n                alert(\"Error! Empty search query!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function replace_symbols(text) {\r\n        // replace symbols with underscore\r\n        return text.replace(/[&\\/\\\\#,+=()$~%.'\":*?<>{}\\ \\]\\[]/g, \"_\");\r\n    }\r\n\r\n    function li_create_linkage(li_tag, header_level) {\r\n        // add custom id and class attributes\r\n        html_safe_tag = replace_symbols(li_tag.text());\r\n        li_tag.attr(\"id\", html_safe_tag);\r\n        li_tag.attr(\"class\", \"link\");\r\n\r\n        // add click listener - on click scroll to relevant header section\r\n        $(ditto.content_id.selector + \" li#\" + li_tag.attr(\"id\")).click(function () {\r\n            // scroll to relevant section\r\n            var header = $(\"h\" + header_level + \".\" + li_tag.attr(\"id\"));\r\n            $('html, body').animate({\r\n                scrollTop: header.offset().top\r\n            }, 200);\r\n\r\n            // highlight the relevant section\r\n            original_color = header.css(\"color\");\r\n            header.animate({ color: \"#ED1C24\", }, 500, function () {\r\n                // revert back to orig color\r\n                $(this).animate({ color: original_color }, 2500);\r\n            });\r\n        });\r\n    }\r\n\r\n    function create_page_anchors() {\r\n        // create page anchors by matching li's to headers\r\n        // if there is a match, create click listeners\r\n        // and scroll to relevant sections\r\n\r\n        // go through header level 2 and 3\r\n        for (var i = 2; i <= 4; i++) {\r\n            // parse all headers\r\n            var headers = [];\r\n            $(ditto.content_id.selector + ' h' + i).map(function () {\r\n                headers.push($(this).text());\r\n                $(this).addClass(replace_symbols($(this).text()));\r\n            });\r\n\r\n            // parse and set links between li and h2\r\n            $(ditto.content_id.selector + ' ul li').map(function () {\r\n                for (var j = 0; j < headers.length; j++) {\r\n                    if (headers[j] === $(this).text()) {\r\n                        li_create_linkage($(this), i);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function youtube_url_extract(data) {\r\n        var yt_regex = /(https?\\:\\/\\/)?(www\\.youtube\\.com|youtu\\.?be)\\/.+/g;\r\n        var yt_url = String(data.match(yt_regex));\r\n        yt_url = yt_url.replace(/]/g, \"\");\r\n        return yt_url;\r\n    }\r\n\r\n    function youtube_url_to_embed(data) {\r\n        return data = data.replace(/watch\\?v\\=/g, \"embed/\");\r\n    }\r\n\r\n    function create_youtube_embeds(data) {\r\n        // replaces [ditto:youtube:<some youtube link>]\r\n        // with a proper youtube embed iframe\r\n        var token_regex = /\\[ditto\\:youtube:(https?\\:\\/\\/)?(www\\.youtube\\.com|youtu\\.?be)\\/.+\\]/g;\r\n        var yt_url = youtube_url_extract(data);\r\n        var yt_embed_url = youtube_url_to_embed(yt_url);\r\n\r\n        // youtube embed html\r\n        var embed_html = `<div class=\"youtube_video\">\r\n      <div style=\"position:relative;height:0;padding-bottom:56.25%\">\r\n        <iframe src=\"<link>?ecver=2\"\r\n          width=\"640\"\r\n          height=\"360\"\r\n          frameborder=\"0\"\r\n          style=\"position:absolute;width:100%;height:100%;left:0\"\r\n          allowfullscreen>\r\n        </iframe>\r\n      </div>\r\n    </div>`;\r\n        embed_html = embed_html.replace(\"<link>\", yt_embed_url);\r\n\r\n        // replace match code with youtube video\r\n        data = data.replace(token_regex, embed_html);\r\n        return data;\r\n    }\r\n\r\n    function normalize_paths() {\r\n        // images\r\n        ditto.content_id.find(\"img\").map(function () {\r\n            var src = $(this).attr(\"src\").replace(/^\\.\\//, \"\");\r\n            if ($(this).attr(\"src\").slice(0, 5) !== \"http\") {\r\n                var url = location.hash.replace(\"#\", \"\");\r\n\r\n                // split and extract base dir\r\n                url = url.split(\"/\");\r\n                var base_dir = url.slice(0, url.length - 1).join(\"/\");\r\n\r\n                // normalize the path (i.e. make it absolute)\r\n                if (base_dir) {\r\n                    $(this).attr(\"src\", base_dir + \"/\" + src);\r\n                } else {\r\n                    $(this).attr(\"src\", src);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    function show_error(err_msg) {\r\n        ditto.error_id.html(err_msg);\r\n        ditto.error_id.show();\r\n    }\r\n\r\n    function hide_errors() {\r\n        ditto.error_id.hide();\r\n    }\r\n\r\n    function show_loading() {\r\n        ditto.loading_id.show();\r\n        ditto.content_id.html(\"\");  // clear content\r\n\r\n        // infinite loop until clearInterval() is called on loading\r\n        ditto.loading_interval = setInterval(function () {\r\n            ditto.loading_id.fadeIn(1000).fadeOut(1000);\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    function stop_loading() {\r\n        clearInterval(ditto.loading_interval);\r\n        ditto.loading_id.hide();\r\n    }\r\n\r\n    function escape_github_badges(data) {\r\n        $(\"img\").map(function () {\r\n            var ignore_list = [\r\n                \"travis-ci.com\",\r\n                \"travis-ci.org\",\r\n                \"coveralls.io\"\r\n            ];\r\n            var src = $(this).attr(\"src\");\r\n\r\n            var base_url = src.split(\"/\");\r\n            var protocol = base_url[0];\r\n            var host = base_url[2];\r\n\r\n            if ($.inArray(host, ignore_list) >= 0) {\r\n                $(this).attr(\"class\", \"github_badges\");\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n\r\n    function page_getter() {\r\n        window.scrollTo(0, 0);\r\n        var path = location.hash.replace(\"#\", \"./\");\r\n\r\n        // default page if hash is empty\r\n        var current_page = location.pathname.split(\"/\").pop();\r\n        if (current_page === \"index.html\") {\r\n            path = location.pathname.replace(\"index.html\", ditto.index);\r\n            normalize_paths();\r\n\r\n        } else if (path === \"\") {\r\n            path = window.location + ditto.index;\r\n            normalize_paths();\r\n\r\n        } else {\r\n            path = path + \".md\";\r\n\r\n        }\r\n\r\n        // otherwise get the markdown and render it\r\n        show_loading();\r\n        $.get(path, function (data) {\r\n            compile_into_dom(path, data, function () {\r\n                // rerender mathjax and reset mathjax equation counter\r\n                if (MathJax && MathJax.Extension[\"Tex/AMSmath\"]) {\r\n                    MathJax.Extension[\"TeX/AMSmath\"].startNumber = 0;\r\n                    MathJax.Extension[\"TeX/AMSmath\"].labels = {};\r\n\r\n                    var content = document.getElementById(\"content\");\r\n                    MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, content]);\r\n                }\r\n            });\r\n        }).fail(function () {\r\n            console.error(\"Opps! ... File not found!\\n5秒后返回主页\")\r\n            show_error(\"Opps! ... File not found!\\n5秒后返回主页\");\r\n            stop_loading();\r\n            setTimeout(()=>{\r\n                location.hash=\"#\"\r\n            },5000)\r\n        });\r\n    }\r\n\r\n    function escape_html(string) {\r\n        return string\r\n            .replace(/\\\\/g, \"&#92;\")\r\n            .replace(/\\_/g, \"&#95;\");\r\n    }\r\n\r\n    function unescape_html(string) {\r\n        return string\r\n            .replace(/&amp;#92;/g, \"\\\\\")\r\n            .replace(/&amp;#95;/g, \"_\");\r\n    }\r\n\r\n    function compile_into_dom(path, data, cb) {\r\n        hide_errors();\r\n\r\n        data = create_youtube_embeds(data);\r\n        data = marked(escape_html(data));\r\n        data = unescape_html(data);\r\n        ditto.content_id.html(data);\r\n\r\n        stop_loading();\r\n        escape_github_badges(data);\r\n\r\n        normalize_paths();\r\n        create_page_anchors();\r\n\r\n        if (ditto.highlight_code) {\r\n            $('pre code').each(function (i, block) {\r\n                hljs.highlightBlock(block);\r\n            });\r\n        }\r\n\r\n        if (cb) {\r\n            cb(data);\r\n        }\r\n    }\r\n\r\n    function router() {\r\n        var hash = location.hash;\r\n\r\n        if (hash.slice(1, 7) !== \"search\") {\r\n            page_getter();\r\n\r\n        } else {\r\n            if (ditto.searchbar) {\r\n                github_search(hash.replace(\"#search=\", \"\"));\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    window.ditto = ditto;\r\n});\r\n"]}